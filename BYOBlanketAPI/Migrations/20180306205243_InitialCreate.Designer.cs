// <auto-generated />
using BYOBlanketAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BYOBlanketAPI.Migrations
{
    [DbContext(typeof(BYOBDbContext))]
    [Migration("20180306205243_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BYOBlanketAPI.Models.NapSpace", b =>
                {
                    b.Property<int>("NapSpaceId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Payment")
                        .IsRequired();

                    b.Property<string>("PictureURL")
                        .IsRequired();

                    b.Property<string>("Price")
                        .IsRequired();

                    b.Property<string>("Rules")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("NapSpaceId");

                    b.HasIndex("UserId");

                    b.ToTable("NapSpace");
                });

            modelBuilder.Entity("BYOBlanketAPI.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CalendarColor")
                        .IsRequired();

                    b.Property<DateTime>("EndDateTime");

                    b.Property<int>("NapSpaceId");

                    b.Property<string>("NapSpaceTitle")
                        .IsRequired();

                    b.Property<DateTime>("StartDateTime");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("ReservationId");

                    b.HasIndex("NapSpaceId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("BYOBlanketAPI.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BYOBlanketAPI.Models.NapSpace", b =>
                {
                    b.HasOne("BYOBlanketAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BYOBlanketAPI.Models.Reservation", b =>
                {
                    b.HasOne("BYOBlanketAPI.Models.NapSpace", "NapSpace")
                        .WithMany()
                        .HasForeignKey("NapSpaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BYOBlanketAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
